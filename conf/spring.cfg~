# From where pom.xml, web.xml, constants etc is going to be copied
DATA_DIRECTORY=$SCRIPT_DIRECTORY/data/default

# Project name
ARTIFACT_ID="tmpprj"

# Global settings
DELETE_PROJECT_WITH_SAME_NAME="y"

# Creates package inside src and tmp directory
GROUP_ID="change.package.name"
PROJECT_VERSION="0.0.1-SNAPSHOT"

# Spring version used in pom.xml
SPRING_VERSION="3.1.1.RELEASE"

# If you have this directory in data, configuration file
# from this directory can override DATA_DIRECTORY or any
# variable from this file
DATA_VERSION="3.1.1.RELEASE"

# What do you want to call the configuration file
# It is good to follow a convention (spring.cfg)
# seems a good name

DATA_DIRECTORY_CONFIG_FILE="spring.cfg"
LOCAL_SPRING_CONFIG_FILE="spring.cfg"

# WEB-INF/web.xml defaults
SERVLET_NAME="spring"
USE_SERVICE_CONF="y"
SERVICE_CONF="$SERVLET_NAME-service.xml"
USE_DATA_CONF="y"
DATA_CONF="$ARTIFACT_ID-data.xml"

# Spring servlet specific settings
# Put all your annotated classes under this directory
# E.g mvc.domain, mvc.service, mvc.component, 
# mvc.controller, mvc.dao etc
# If you don't want to scan in this fashion add
# more context:component-scan base-package in
# servlet xml file
BASE_PACKAGE="$GROUP_ID.mvc"
BASE_PACKAGE_DIR=`echo "$BASE_PACKAGE" | tr \. /`

CREATE_DEFAULT_CONTROLLER_DIRECTORY="y"
CREATE_DEFAULT_SERVICE_DIRECTORY=""
CREATE_DEFAULT_DOMAIN_DIRECTORY=""
CREATE_DEFAULT_COMPONENT_DIRECTORY="y"

if [ USE_SERVICE_CONF = "y" ]; then
	 CREATE_DEFAULT_SERVICE_DIRECTORY="y"
fi

if [ USE_DATA_CONF = "y" ]; then
	 CREATE_DEFAULT_DOMAIN_DIRECTORY="y"
fi

DEFAULT_CONTROLLER_DIRECTORY=""
DEFAULT_SERVICE_DIRECTORY=""
DEFAULT_DOMAIN_DIRECTORY=""
DEFAULT_COMPONENT_DIRECTORY=""

if [ CREATE_DEFAULT_CONTROLLER_DIRECTORY = "y" ]; then
	DEFAULT_CONTROLLER_DIRECTORY="$BASE_PACKAGE/controller/"
fi

if [ CREATE_DEFAULT_SERVICE_DIRECTORY = "y" ]; then
	DEFAULT_SERVICE_DIRECTORY="$BASE_PACKAGE/service/ $BASE_PACKAGE/service/interfaces/"
fi

if [ CREATE_DEFAULT_DOMAIN_DIRECTORY = "y" ]; then
	DEFAULT_DOMAIN_DIRECTORY="$BASE_PACKAGE/domain/"
fi

if [ CREATE_DEFAULT_COMPONENT_DIRECTORY = "y" ]; then
	DEFAULT_COMPONENT_DIRECTORY="$BASE_PACKAGE/component/"
fi

# What directories the project is going to have
# It is wise to leave it as such, or make adjustments
# in default configuration file to specify where
# configuration files and sub directories are going to
# be created

PROJECT_DIRECTORY_STRUCTURE="src/main/ src/main/java/ src/main/java/$BASE_PACKAGE_DIR src/main/resources/ src/main/webapp/ src/main/webapp/resources/ src/main/webapp/resources/js/ src/main/webapp/resources/css/ src/main/webapp/resources/images/ src/main/webapp/WEB-INF/ src/main/webapp/WEB-INF/messages/ src/test/java/ src/test/java/$BASE_PACKAGE_DIR src/test/resources/ $DEFAULT_CONTROLLER_DIRECTORY $DEFAULT_SERVICE_DIRECTORY $DEFAULT_DOMAIN_DIRECTORY $DEFAULT_COMPONENT_DIRECTORY"

echo  "Hi"$DEFAULT_CONTROLLER_DIRECTORY

# Database properties
APP_JDBC_DRIVER_CLASS_NAME="com.mysql.jdbc.Driver"
APP_JDBC_URL="jdbc:mysql://localhost/"$ARTIFACT_ID
APP_JDBC_USERNAME="root"
APP_JDBC_PASSWORD="password"

# Hibernate properties
HIBERNATE_CONFIG="/WEB-INF/hibernate.cfg.xml"
HIBERNATE_PACKAGES_TO_SCAN="$BASE_PACKAGE.domain"

# Create database
DATA_BASE_SCRIPT="y"
DATABASE_SCRIPT_FILENAME="mysql.sh"
DATABASE_NAME=$ARTIFACT_ID
